<sch:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:sch="http://purl.oclc.org/dsdl/schematron">
<sch:title>Business rules voor het controleren op UBL syntax gebruik</sch:title>
<sch:ns prefix="ubl" uri="urn:oasis:names:specification:ubl:schema:xsd:RequestForQuotation-2"/>
<sch:ns prefix="cac" uri="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"/>
<sch:ns prefix="cbc" uri="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"/>
<sch:ns prefix="ext" uri="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2"/>
<sch:ns prefix="scsn" uri="urn:scsn/order#"/>
<sch:ns prefix="core" uri="urn:scsn/core#"/>
<!--   ubl:Quotation  -->
<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00000" fpi="Only the UBL elements specified by SCSN are allowed" context="ubl:RequestForQuotation" flag="error">
<sch:assert test="not(ext:UBLExtensions)">An Order SHOULD not contain UBLExtensions.</sch:assert>
<sch:assert test="not(cbc:UBLVersionID)">An Order SHOULD not contain UBLVersionID.</sch:assert>
<sch:assert test="not(cbc:ProfileID)">An Order SHOULD not contain ProfileID.</sch:assert>
<sch:assert test="not(cbc:ProfileExecutionID)">An Order SHOULD not contain ProfileExecutionID.</sch:assert>
<sch:assert test="not(cbc:CopyIndicator)">An Order SHOULD not contain CopyIndicator.</sch:assert>
<sch:assert test="not(cbc:UUID)">An Order SHOULD not contain UUID.</sch:assert>
<sch:assert test="not(cbc:SubmissionDueDate)">An Order SHOULD not contain SubmissionDueDate.</sch:assert>
<sch:assert test="not(cbc:CatalogueDocumentReference)">An Order SHOULD not contain CatalogueDocumentReference.</sch:assert>
<sch:assert test="not(cbc:PricingCurrencyCode)">An Order SHOULD not contain PricingCurrencyCode.</sch:assert>
<sch:assert test="not(cbc:LineCountNumeric)">An Order SHOULD not contain LineCountNumeric.</sch:assert>
<sch:assert test="not(cac:Signature)">An Order SHOULD not contain CatalogueReference.</sch:assert>
<sch:assert test="not(cac:Delivery)">An Order SHOULD not contain ProjectReference.</sch:assert>
<sch:assert test="not(cac:OriginatorCustomerParty)">An Order SHOULD not contain OriginatorCustomerParty.</sch:assert>
<sch:assert test="not(cac:DestinationCountry)">An Order SHOULD not contain PricingExchangeRate.</sch:assert>
<sch:assert test="not(cbc:Note = 'Piramide van Arthur')"> Al in de tijd van de Egyptenaren werd er nagedacht over hoe de informatie voorziening omtrent het bouwen van Piramides geautomatiseerd kon worden. Farao Arthur legde hier de beginselen voor het SCSN gedachtengoed. Wij zijn hem eeuwig dankbaar. </sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00001" fpi="SCSN restrictions on UBL syntax" context="ubl:Quotation" flag="error">
<sch:assert test="cbc:ID">ID is mandatory.</sch:assert>
<sch:assert test="cbc:IssueDate">Issue date is mandatory.</sch:assert>
<sch:assert test="cac:BuyerCustomerParty">Buyer customer party is mandatory.</sch:assert>
<sch:assert test="not(cac:Contract[2])">Contract reference information is only allowed once.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00002" fpi="Only the UBL elements specified by SCSN are allowed" context="ubl:Quotation/cbc:ID | //cac:DocumentReference/cbc:ID | //cac:Contract/cac:ContractDocumentReference/cbc:ID | //cac:AdditionalDocumentReference/cbc:ID | //cbc:AttributeID" flag="error">
<sch:assert test="not(@schemeID)">This element SHOULD not contain a schemeID attribute.</sch:assert>
<sch:assert test="not(@schemeName)">This element SHOULD not contain a schemeName attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyID)">This element SHOULD not contain a schemeAgencyID attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyName)">This element SHOULD not contain a schemeAgencyName attribute.</sch:assert>
<sch:assert test="not(@schemeVersionID)">This element SHOULD not contain a schemeVersionID attribute.</sch:assert>
<sch:assert test="not(@schemeDataURI)">This element SHOULD not contain a schemeDataURI attribute.</sch:assert>
<sch:assert test="not(@schemeURI)">This element SHOULD not contain a schemeURI attribute.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
    <sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00003" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:RequestedValidityPeriod" flag="error">
    <sch:assert test="not(cbc:DurationMeasure)">This element SHOULD not contain DurationMeasure.</sch:assert>
    <sch:assert test="not(cbc:DescriptionCode)">This element SHOULD not contain DescriptionCode.</sch:assert>
    <sch:assert test="not(cbc:Description)">This element SHOULD not contain Description.</sch:assert>
    <sch:assert test="cbc:EndDate">This element SHOULD contain EndDate.</sch:assert>
    </sch:rule>
</sch:pattern>


<sch:pattern>
    <sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00004" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:Contract" flag="error">
    <sch:assert test="not(cbc:ID)">This element SHOULD not contain DurationMeasure.</sch:assert>
    <sch:assert test="not(cbc:IssueDate)">This element SHOULD not contain IssueDate.</sch:assert>
    <sch:assert test="not(cbc:IssueTime)">This element SHOULD not contain IssueTime.</sch:assert>
    <sch:assert test="not(cbc:NominationDate)">This element SHOULD not contain NominationDate.</sch:assert>
    <sch:assert test="not(cbc:NominationTime)">This element SHOULD not contain NominationTime.</sch:assert>
    <sch:assert test="not(cbc:ContractTypeCode)">This element SHOULD not contain ContractTypeCode.</sch:assert>
    <sch:assert test="not(cbc:ContractType)">This element SHOULD not contain ContractType.</sch:assert>
    <sch:assert test="not(cbc:Note)">This element SHOULD not contain Note.</sch:assert>
    <sch:assert test="not(cbc:VersionID)">This element SHOULD not contain VersionID.</sch:assert>
    <sch:assert test="not(cbc:Description)">This element SHOULD not contain Description.</sch:assert>
    <sch:assert test="not(cac:NominationPeriod)">This element SHOULD not contain NominationPeriod.</sch:assert>
    <sch:assert test="not(cac:ContractualDelivery)">This element SHOULD not contain ContractualDelivery.</sch:assert>
    <sch:assert test="not(cac:ValidityPeriod)">This element SHOULD not contain ValidityPeriod.</sch:assert>
      </sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00005" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:BuyerCustomerParty/* | //cac:SellerSupplierParty/* | //cac:AccountingCustomerParty/*" flag="error">
<sch:assert test="name() = 'cac:Party'">This UBL element SHOULD not be used.</sch:assert>
</sch:rule>
</sch:pattern>


<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00007" fpi="SCSN restrictions on UBL syntax" context="//cac:BuyerCustomerParty | //cac:SellerSupplierParty | //cac:AccountingCustomerParty" flag="error">
<sch:assert test="cac:Party">Party is mandatory.</sch:assert>
<sch:assert test="not(cbc:CustomerAssignedAccountID)">An AllowanceCharge SHOULD not contain a CustomerAssignedAccountID.</sch:assert>
<sch:assert test="not(cbc:AdditionalAccountID)">An AllowanceCharge SHOULD not contain a AdditionalAccountID.</sch:assert>
<sch:assert test="not(cbc:DataSendingCapability)">An AllowanceCharge SHOULD not contain a DataSendingCapability.</sch:assert>
<sch:assert test="not(cac:DepatchContact)">An AllowanceCharge SHOULD not contain a DepatchContact.</sch:assert>
<sch:assert test="not(cac:AccountingContact)">An AllowanceCharge SHOULD not contain a AccountingContact.</sch:assert>
<sch:assert test="not(cac:SellerContact)">An AllowanceCharge SHOULD not contain a AccountingContact.</sch:assert>
</sch:rule>
</sch:pattern>



<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00008" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:Party | //cac:ManufacturerParty | //cac:OriginatorParty" flag="error">
<sch:assert test="not(cbc:MarkCareIndicator)">A party SHOULD not contain a MarkCareIndicator.</sch:assert>
<sch:assert test="not(cbc:MarkAttentionIndicator)">A party SHOULD not contain a MarkAttentionIndicator.</sch:assert>
<sch:assert test="not(cbc:WebsiteURI)">A party SHOULD not contain a WebsiteURI.</sch:assert>
<sch:assert test="not(cbc:LogoReferenceID)">A party SHOULD not contain a LogoReferenceID.</sch:assert>
<sch:assert test="not(cbc:EndpointID)">A party SHOULD not contain a EndPointID.</sch:assert>
<sch:assert test="not(cbc:IndustryClassificationCode)">A party SHOULD not contain a IndustryClassificationCode.</sch:assert>
<sch:assert test="not(cac:Language)">A party SHOULD not contain a Language.</sch:assert>
<sch:assert test="not(cac:AgentParty)">A party SHOULD not contain a AgentParty.</sch:assert>
<sch:assert test="not(cac:ServiceProviderParty)">A party SHOULD not contain a ServiceProviderParty.</sch:assert>
<sch:assert test="not(cac:PowerOfAttorney)">A party SHOULD not contain a PowerOfAttorney.</sch:assert>
<sch:assert test="not(cac:FinancialAccount)">A party SHOULD not contain a FinancialAccount.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cbc:RegistrationName)">A PartyTaxScheme SHOULD not contain a RegistrationName.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cbc:TaxLevelCode)">A PartyTaxScheme SHOULD not contain a TaxLevelCode.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cbc:ExemptionReasonCode)">A PartyTaxScheme SHOULD not contain a ExemptionReasonCode.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cbc:ExemptionReason)">A PartyTaxScheme SHOULD not contain a ExemptionReason.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cac:RegistrationAddress)">A PartyTaxScheme SHOULD not contain a RegistrationAddress.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cac:TaxScheme/cbc:ID)">A TaxScheme SHOULD not contain a ID.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cac:TaxScheme/cbc:Name)">A TaxScheme SHOULD not contain a Name.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cac:TaxScheme/cbc:TaxTypeCode)">A TaxScheme SHOULD not contain a TaxTypeCode.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cac:TaxScheme/cbc:CurrencyCode)">A TaxScheme SHOULD not contain a CurrencyCode.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme/cac:TaxScheme/cac:JurisdictionRegionAddress)">A TaxScheme SHOULD not contain a JurisdictionRegionAddress.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cbc:RegistrationName)">A PartyLegalEntity SHOULD not contain a RegistrationName.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cbc:RegistrationDate)">A PartyLegalEntity SHOULD not contain a RegistrationDate.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cbc:RegistrationExpirationDate)">A PartyLegalEntity SHOULD not contain a RegistrationExpirationDate.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cbc:CompanyLegalFormCode)">A PartyLegalEntity SHOULD not contain a CompanyLegalFormCode.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cbc:CompanyLegalForm)">A PartyLegalEntity SHOULD not contain a CompanyLegalForm.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cbc:SoleProprietorshipIndicator)">A PartyLegalEntity SHOULD not contain a SoleProprietorshipIndicator.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cbc:CompanyLiquidationStatusCode)">A PartyLegalEntity SHOULD not contain a CompanyLiquidationStatusCode.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cbc:CorporateStockAmount)">A PartyLegalEntity SHOULD not contain a CorporateStockAmount.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cbc:FullyPaidSharesIndicator)">A PartyLegalEntity SHOULD not contain a FullyPaidSharesIndicator.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cac:RegistrationAddress)">A PartyLegalEntity SHOULD not contain a RegistrationAddress.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cac:CorporateRegistrationScheme)">A PartyLegalEntity SHOULD not contain a CorporateRegistrationScheme.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cac:HeadOfficeParty)">A PartyLegalEntity SHOULD not contain a HeadOfficeParty.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity/cac:ShareholderParty)">A PartyLegalEntity SHOULD not contain a ShareholderParty.</sch:assert>
<sch:assert test="not(cac:Person/cbc:ID)">A Person SHOULD not contain an ID.</sch:assert>
<sch:assert test="not(cac:Person/cbc:MiddleName)">A Person SHOULD not contain a MiddleName.</sch:assert>
<sch:assert test="not(cac:Person/cbc:OtherName)">A Person SHOULD not contain an OtherName.</sch:assert>
<sch:assert test="not(cac:Person/cbc:NameSuffix)">A Person SHOULD not contain a NameSuffix.</sch:assert>
<sch:assert test="not(cac:Person/cbc:NationalityID)">A Person SHOULD not contain a NationalityID.</sch:assert>
<sch:assert test="not(cac:Person/cbc:GenderCode)">A Person SHOULD not contain a GenderCode.</sch:assert>
<sch:assert test="not(cac:Person/cbc:BirthDate)">A Person SHOULD not contain a BirthDate.</sch:assert>
<sch:assert test="not(cac:Person/cbc:BirthplaceName)">A Person SHOULD not contain a BirthplaceName.</sch:assert>
<sch:assert test="not(cac:Person/cac:FinancialAccount)">A Person SHOULD not contain a FinancialAccount.</sch:assert>
<sch:assert test="not(cac:Person/cac:IdentityDocumentReference)">A Person SHOULD not contain an IdentityDocumentReference.</sch:assert>
<sch:assert test="not(cac:Person/cac:ResidenceAddress)">A Person SHOULD not contain a ResidenceAddress.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00009" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:DocumentReference | //cac:ItemSpecificationDocumentReference | //cac:AdditionalDocumentReference" flag="error">
<sch:assert test="not(cbc:CopyIndicator)">A DocumentReference SHOULD not contain CopyIndicator.</sch:assert>
<sch:assert test="not(cbc:UUID)">A DocumentReference SHOULD not contain UUID.</sch:assert>
<sch:assert test="not(cbc:IssueTime)">A DocumentReference SHOULD not contain IssueTime.</sch:assert>
<sch:assert test="not(cbc:DocumentTypeCode)">A DocumentReference SHOULD not contain DocumentTypeCode.</sch:assert>
<sch:assert test="not(cbc:XPath)">A DocumentReference SHOULD not contain XPath.</sch:assert>
<sch:assert test="not(cbc:LanguageID)">A DocumentReference SHOULD not contain LanguageID.</sch:assert>
<sch:assert test="not(cbc:LocaleCode)">A DocumentReference SHOULD not contain LocaleCode.</sch:assert>
<sch:assert test="not(cbc:DocumentStatusCode)">A DocumentReference SHOULD not contain DocumentStatusCode.</sch:assert>
<sch:assert test="not(cbc:DocumentDescription)">A DocumentReference SHOULD not contain DocumentDescription.</sch:assert>
<sch:assert test="not(cac:ValidityPeriod)">A DocumentReference SHOULD not contain ValidityPeriod.</sch:assert>
<sch:assert test="not(cac:IssuerParty)">A DocumentReference SHOULD not contain IssuerParty.</sch:assert>
<sch:assert test="not(cac:ResultOfVerification)">A DocumentReference SHOULD not contain ResultOfVerification.</sch:assert>
<sch:assert test="not(cac:Attachment/cbc:EmbeddedDocumentBinaryObject/@format)">An EmbeddedDocumentBinaryObject SHOULD not contain a format attribute.</sch:assert>
<sch:assert test="not(cac:Attachment/cbc:EmbeddedDocumentBinaryObject/@encodingCode)">An EmbeddedDocumentBinaryObject SHOULD not contain an encodingCode attribute.</sch:assert>
<sch:assert test="not(cac:Attachment/cbc:EmbeddedDocumentBinaryObject/@characterSetCode)">An EmbeddedDocumentBinaryObject SHOULD not contain a characterSetCode attribute.</sch:assert>
<sch:assert test="not(cac:Attachment/cbc:EmbeddedDocumentBinaryObject/@uri)">An EmbeddedDocumentBinaryObject SHOULD not contain an uri attribute.</sch:assert>
<sch:assert test="not(cac:Attachment/cac:ExternalReference/cbc:HashAlgorithmMethod)">An Attachment SHOULD not contain HashAlgorithmMethod.</sch:assert>
<sch:assert test="not(cac:Attachment/cac:ExternalReference/cbc:ExpiryDate)">An Attachment SHOULD not contain ExpiryDate.</sch:assert>
<sch:assert test="not(cac:Attachment/cac:ExternalReference/cbc:ExpiryTime)">An Attachment SHOULD not contain ExpiryTime.</sch:assert>
<sch:assert test="not(cac:Attachment/cac:ExternalReference/cbc:FormatCode)">An Attachment SHOULD not contain FormatCode.</sch:assert>
<sch:assert test="not(cac:Attachment/cac:ExternalReference/cbc:EncodingCode)">An Attachment SHOULD not contain EncodingCode.</sch:assert>
<sch:assert test="not(cac:Attachment/cac:ExternalReference/cbc:CharacterSetCode)">An Attachment SHOULD not contain CharacterSetCode.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00010" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:DeliveryTerms" flag="error">
<sch:assert test="not(cbc:SpecialTerms)">DeliveryTerms SHOULD not contain SpecialTerms.</sch:assert>
<sch:assert test="not(cbc:LossRiskResponsibilityCode)">DeliveryTerms SHOULD not contain LossRiskResponsibilityCode.</sch:assert>
<sch:assert test="not(cbc:LossRisk)">DeliveryTerms SHOULD not contain LossRisk.</sch:assert>
<sch:assert test="not(cbc:Amount)">DeliveryTerms SHOULD not contain Amount.</sch:assert>
<sch:assert test="not(cac:AllowanceCharge)">DeliveryTerms SHOULD not contain AllowanceCharge.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00011" fpi="SCSN restrictions on UBL syntax" context="//cac:DeliveryTerms" flag="error">
<sch:assert test="cbc:ID">ID is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00012" fpi="SCSN restrictions on UBL syntax" context="cac:DeliveryTerms/cbc:ID" flag="error">
<sch:assert test="@schemeName">The attribute schemeName is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00013" fpi="Only the UBL elements specified by SCSN are allowed" context="cac:DeliveryTerms/cbc:ID" flag="error">
<sch:assert test="not(@schemeID)">An ID SHOULD not contain a schemeID attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyID)">An ID SHOULD not contain a schemeAgencyID attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyName)">An ID SHOULD not contain a schemeAgencyName attribute.</sch:assert>
<sch:assert test="not(@schemeVersionID)">An ID SHOULD not contain a schemeVersionID attribute.</sch:assert>
<sch:assert test="not(@schemeDataURI)">An ID SHOULD not contain a schemeDataURI attribute.</sch:assert>
<sch:assert test="not(@schemeURI)">An ID SHOULD not contain a schemeURI attribute.</sch:assert>
</sch:rule>
</sch:pattern>


<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00014" fpi="Only the UBL elements specified by SCSN are allowed" context="//cbc:MimeCode | //cbc:IdentificationCode | //cbc:CoordinateSystemCode | //cbc:LineStatusCode | //cbc:AllowanceChargeReasonCode" flag="error">
<sch:assert test="not(@listID)">This element SHOULD not contain a listID attribute.</sch:assert>
<sch:assert test="not(@listAgencyID)">This element SHOULD not contain a listAgencyID attribute.</sch:assert>
<sch:assert test="not(@listAgencyName)">This element SHOULD not contain a listAgencyName attribute.</sch:assert>
<sch:assert test="not(@listName)">This element SHOULD not contain a listName attribute.</sch:assert>
<sch:assert test="not(@listVersionID)">This element SHOULD not contain a listVersionID attribute.</sch:assert>
<sch:assert test="not(@name)">This element SHOULD not contain a name attribute.</sch:assert>
<sch:assert test="not(@languageID)">This element SHOULD not contain a languageID attribute.</sch:assert>
<sch:assert test="not(@listURI)">This element SHOULD not contain a listURI attribute.</sch:assert>
<sch:assert test="not(@listSchemeURI)">This element SHOULD not contain a listSchemeURI attribute.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00015" fpi="Only the UBL elements specified by SCSN are allowed" context="//cbc:Note | //cbc:DocumentType | //cbc:DocumentHash | //cbc:FileName | //cbc:Description | //cbc:Name | //cbc:StreetName | //cbc:AdditionalStreetName | //cbc:BuildingNumber | //cbc:CityName | //cbc:PostalZone | //cbc:Line | //cbc:Telephone | //cbc:Telefax | //cbc:ElectronicMail | //cbc:Value | //cbc:FirstName | //cbc:FamilyName | //cbc:Title | //cbc:JobTitle | //cbc:OrganizationDepartment | //cbc:Instructions | //cbc:PriceType" flag="error">
<sch:assert test="not(@languageID)">This element SHOULD not contain a languageID attribute.</sch:assert>
<sch:assert test="not(@languageLocaleID)">This element SHOULD not contain a languageLocaleID attribute.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00016" fpi="Only the UBL elements specified by SCSN are allowed" context="//cbc:LatitudeDegreesMeasure | //cbc:LongitudeDegreesMeasure | //cbc:SettlementDiscountAmount | //cbc:DurationMeasure | //cbc:Measure" flag="error">
<sch:assert test="not(@unitCodeListVersionID)">This element SHOULD not contain an unitCodeListVersionID attribute.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00017" fpi="Only the UBL elements specified by SCSN are allowed" context="//cbc:MultiplierFactorNumeric" flag="error">
<sch:assert test="not(@format)">This element SHOULD not contain a format attribute.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00018" fpi="SCSN restrictions on UBL syntax" context="//cac:Party | //cac:ManufacturerParty | //cac:OriginatorParty" flag="error">
<sch:assert test="cac:PartyIdentification">PartyIdentification is mandatory.</sch:assert>
<sch:assert test="not(cac:PartyIdentification[2])">PartyIdentification is only allowed once.</sch:assert>
<sch:assert test="not(cac:PartyTaxScheme[2])">A PartyTaxScheme is only allowed once.</sch:assert>
<sch:assert test="not(cac:PartyLegalEntity[2])">A PartyLegalEntity is only allowed once.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00019" fpi="SCSN restrictions on UBL syntax" context="//cac:PhysicalLocation/cbc:ID | //cac:PartyLegalEntity/cbc:CompanyID" flag="error">
<sch:assert test="@schemeID">The attribute schemeName is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00020" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:PartyIdentification/cbc:ID | //cac:PhysicalLocation/cbc:ID | //cac:PartyLegalEntity/cbc:CompanyID" flag="error">
<sch:assert test="not(@schemeName)">An ID SHOULD not contain a schemeName attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyID)">An ID SHOULD not contain a schemeAgencyID attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyName)">An ID SHOULD not contain a schemeAgencyName attribute.</sch:assert>
<sch:assert test="not(@schemeVersionID)">An ID SHOULD not contain a schemeVersionID attribute.</sch:assert>
<sch:assert test="not(@schemeDataURI)">An ID SHOULD not contain a schemeDataURI attribute.</sch:assert>
<sch:assert test="not(@schemeURI)">An ID SHOULD not contain a schemeURI attribute.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00021" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:Contact" flag="error">
<sch:assert test="not(cbc:ID)">A Contact SHOULD not contain an ID.</sch:assert>
<sch:assert test="not(cbc:Name)">A Contact SHOULD not contain a Name.</sch:assert>
<sch:assert test="not(cbc:Note)">A Contact SHOULD not contain a Note.</sch:assert>
<sch:assert test="not(cac:OtherCommunication/cbc:ChannelCode)">OtherCommunication SHOULD not contain a ChannelCode.</sch:assert>
<sch:assert test="not(cac:OtherCommunication/cbc:Channel)">OtherCommunication SHOULD not contain a Channel.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00022" fpi="SCSN restrictions on UBL syntax" context="//cac:Person" flag="error">
<sch:assert test="cbc:FamilyName">FamilyName is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00023" fpi="SCSN restrictions on UBL syntax" context="//cac:PhysicalLocation | //cac:DeliveryLocation" flag="error">
<sch:assert test="not(cbc:Description[2])">Description is only allowed once.</sch:assert>
<sch:assert test="not(cac:LocationCoordinate[2])">LocationCoordinate is only allowed once.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00024" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:PhysicalLocation" flag="error">
<sch:assert test="not(cbc:Conditions)">A Location SHOULD not contain Conditions.</sch:assert>
<sch:assert test="not(cbc:CountrySubentity)">A Location SHOULD not contain a CountrySubentity.</sch:assert>
<sch:assert test="not(cbc:CountrySubentityCode)">A Location SHOULD not contain a CountrySubentityCode.</sch:assert>
<sch:assert test="not(cbc:LocationTypeCode)">A Location SHOULD not contain a LocationTypeCode.</sch:assert>
<sch:assert test="not(cbc:InformationURI)">A Location SHOULD not contain a InformationURI.</sch:assert>
<sch:assert test="not(cbc:Name)">A Location SHOULD not contain a Name.</sch:assert>
<sch:assert test="not(cac:ValidityPeriod)">A Location SHOULD not contain a ValidityPeriod.</sch:assert>
<sch:assert test="not(cac:SubsidiaryLocation)">A Location SHOULD not contain a SubsidiaryLocation.</sch:assert>
<sch:assert test="not(cac:LocationCoordinate/cbc:LatitudeMinutesMeasure)">A LocationCoordinate SHOULD not contain a LatitudeMinutesMeasure.</sch:assert>
<sch:assert test="not(cac:LocationCoordinate/cbc:LatitudeDirectionCode)">A LocationCoordinate SHOULD not contain a LatitudeDirectionCode.</sch:assert>
<sch:assert test="not(cac:LocationCoordinate/cbc:LongitudeMinutesMeasure)">A LocationCoordinate SHOULD not contain a LongitudeMinutesMeasure.</sch:assert>
<sch:assert test="not(cac:LocationCoordinate/cbc:LongitudeDirectionCode)">A LocationCoordinate SHOULD not contain a LongitudeDirectionCode.</sch:assert>
<sch:assert test="not(cac:LocationCoordinate/cbc:AltitudeMeasure)">A LocationCoordinate SHOULD not contain a AltitudeMeasure.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00025" fpi="SCSN restrictions on UBL syntax" context="//cbc:CoordinateSystemCode" flag="error">
<sch:assert test="(. = 'ETRS89') or (. = 'GRS80') or (. = 'WGS84')">CoordinateSystem MUST be specified as 'ETRS89', 'GRS80' or 'WGS84'.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00026" fpi="SCSN restrictions on UBL syntax" context="//cac:PostalAddress | //cac:Address" flag="error">
<sch:assert test="not(cac:AddressLine[2])">AddressLine is only allowed once.</sch:assert>
<sch:assert test="cbc:BuildingNumber">BuildingNumber is mandatory.</sch:assert>
<sch:assert test="cbc:PostalZone">PostalZone is mandatory.</sch:assert>
<sch:assert test="cac:Country/cbc:IdentificationCode">Country identification code is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00027" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:PostalAddress | //cac:Address" flag="error">
<sch:assert test="not(cbc:ID)">An Address SHOULD not contain ID.</sch:assert>
<sch:assert test="not(cbc:AddressTypeCode)">An Address SHOULD not contain AddressTypeCode.</sch:assert>
<sch:assert test="not(cbc:AddressFormatCode)">An Address SHOULD not contain AddressFormatCode.</sch:assert>
<sch:assert test="not(cbc:Postbox)">An Address SHOULD not contain Postbox.</sch:assert>
<sch:assert test="not(cbc:Floor)">An Address SHOULD not contain Floor.</sch:assert>
<sch:assert test="not(cbc:Room)">An Address SHOULD not contain Room.</sch:assert>
<sch:assert test="not(cbc:BlockName)">An Address SHOULD not contain BlockName.</sch:assert>
<sch:assert test="not(cbc:BuildingName)">An Address SHOULD not contain BuildingName.</sch:assert>
<sch:assert test="not(cbc:InhouseMail)">An Address SHOULD not contain InhouseMail.</sch:assert>
<sch:assert test="not(cbc:Department)">An Address SHOULD not contain Department.</sch:assert>
<sch:assert test="not(cbc:MarkAttention)">An Address SHOULD not contain MarkAttention.</sch:assert>
<sch:assert test="not(cbc:MarkCare)">An Address SHOULD not contain MarkCare.</sch:assert>
<sch:assert test="not(cbc:PlotIdentification)">An Address SHOULD not contain PlotIdentification.</sch:assert>
<sch:assert test="not(cbc:CitySubdivisionName)">An Address SHOULD not contain CitySubdivisionName.</sch:assert>
<sch:assert test="not(cbc:CountrySubentity)">An Address SHOULD not contain CountrySubentity.</sch:assert>
<sch:assert test="not(cbc:CountrySubentityCode)">An Address SHOULD not contain CountrySubentityCode.</sch:assert>
<sch:assert test="not(cbc:Region)">An Address SHOULD not contain Region.</sch:assert>
<sch:assert test="not(cbc:District)">An Address SHOULD not contain District.</sch:assert>
<sch:assert test="not(cbc:TimezoneOffset)">An Address SHOULD not contain TimezoneOffset.</sch:assert>
<sch:assert test="not(cac:Country/cbc:Name)">An Country SHOULD not contain Name.</sch:assert>
<sch:assert test="not(cac:LocationCoordinate)">An Address SHOULD not contain LocationCoordinate.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00027" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:Contract/*" flag="error">
<sch:assert test="name() = 'cac:ContractDocumentReference'">This UBL element SHOULD not be used.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00028" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:RequestForQuotationLine" flag="error">
<sch:assert test="not(cbc:ID)">An RequestForQuotationLine SHOULD not contain ID.</sch:assert>
<sch:assert test="not(cbc:Note)">An RequestForQuotationLine SHOULD not contain Note.</sch:assert>
<sch:assert test="not(cac:OptionalLineItemIndicator)">An RequestForQuotationLine SHOULD not contain OptionalLineItemIndicator.</sch:assert>
<sch:assert test="not(cbc:PrivacyCode)">An RequestForQuotationLine SHOULD not contain PrivacyCode.</sch:assert>
<sch:assert test="not(cbc:SecurityClassificationCode)">An RequestForQuotationLine SHOULD not contain SecurityClassificationCode.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00029" fpi="SCSN restrictions on UBL syntax" context="//cac:RequestForQuotationLine" flag="error">
<sch:assert test="cac:LineItem">LineItem is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00030" fpi="SCSN restrictions on UBL syntax" context="//cac:DocumentReference | //cac:ItemSpecificationDocumentReference | //cac:AdditionalDocumentReference" flag="error">
<sch:assert test="cbc:DocumentType">DocumentType is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>


<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00031" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:LineItem" flag="error">
<sch:assert test="not(cbc:SalesOrderID)">A LineItem SHOULD not contain SalesOrderID.</sch:assert>
<sch:assert test="not(cbc:UUID)">A LineItem SHOULD not contain UUID.</sch:assert>
<sch:assert test="not(cbc:TotalTaxAmount)">A LineItem SHOULD not contain TotalTaxAmount.</sch:assert>
<sch:assert test="not(cbc:LineStatusCode)">A LineItem SHOULD not contain LineStatusCode.</sch:assert>
<sch:assert test="not(cbc:MinimumQuantity)">A LineItem SHOULD not contain MinimumQuantity.</sch:assert>
<sch:assert test="not(cbc:MaximumQuantity)">A LineItem SHOULD not contain MaximumQuantity.</sch:assert>
<sch:assert test="not(cbc:MinimumBackorderQuantity)">A LineItem SHOULD not contain MinimumBackorderQuantity.</sch:assert>
<sch:assert test="not(cbc:MaximumBackorderQuantity)">A LineItem SHOULD not contain MaximumBackorderQuantity.</sch:assert>
<sch:assert test="not(cbc:InspectionMethodCode)">A LineItem SHOULD not contain InspectionMethodCode.</sch:assert>
<sch:assert test="not(cbc:PartialDeliveryIndicator)">A LineItem SHOULD not contain PartialDeliveryIndicator.</sch:assert>
<sch:assert test="not(cbc:BackOrderAllowedIndicator)">A LineItem SHOULD not contain BackOrderAllowedIndicator.</sch:assert>
<sch:assert test="not(cbc:AccountingCostCode)">A LineItem SHOULD not contain AccountingCostCode.</sch:assert>
<sch:assert test="not(cbc:AccountingCost)">A LineItem SHOULD not contain AccountingCost.</sch:assert>
<sch:assert test="not(cbc:WarrantyInformation)">A LineItem SHOULD not contain WarrantyInformation.</sch:assert>
<sch:assert test="not(cac:DeliveryTerms)">A LineItem SHOULD not contain DeliveryTerms.</sch:assert>
<sch:assert test="not(cac:OrginatorParty)">A LineItem SHOULD not contain OrginatorParty.</sch:assert>
<sch:assert test="not(cac:OrderedShipment)">A LineItem SHOULD not contain OrderedShipment.</sch:assert>
<sch:assert test="not(cac:PricingReference)">A LineItem SHOULD not contain PricingReference.</sch:assert>
<sch:assert test="not(cac:AllowanceCharge)">A LineItem SHOULD not contain AllowanceCharge.</sch:assert>
<sch:assert test="not(cac:WarrantyValidityPeriod)">A LineItem SHOULD not contain WarrantyValidityPeriod.</sch:assert>
<sch:assert test="not(cac:WarrantyParty)">A LineItem SHOULD not contain WarrantyParty.</sch:assert>
<sch:assert test="not(cac:TaxTotal)">A LineItem SHOULD not contain TaxTotal.</sch:assert>
<sch:assert test="not(cac:ItemPriceExtension)">A LineItem SHOULD not contain ItemPriceExtension.</sch:assert>
<sch:assert test="not(cac:LineReference)">A LineItem SHOULD not contain LineReference.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00032" fpi="SCSN restrictions on UBL syntax" context="//cac:LineItem" flag="error">
<sch:assert test="cbc:Quantity">Quantity is mandatory.</sch:assert>
<sch:assert test="cac:Delivery">Delivery is mandatory.</sch:assert>
<sch:assert test="cac:Price">Price is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00040" fpi="SCSN restrictions on UBL syntax" context="//cbc:Quantity | //cbc:BaseQuantity" flag="error">
<sch:assert test="@unitCode">The attribute unitCode is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>


<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00041" fpi="Only the UBL elements specified by SCSN are allowed" context="//cbc:Quantity | //cbc:BaseQuantity" flag="error">
<sch:assert test="not(@unitCodeListID)">A Quantity SHOULD not contain an unitCodeListID attribute.</sch:assert>
<sch:assert test="not(@unitCodeListAgencyID)">A Quantity SHOULD not contain an unitCodeListAgencyID attribute.</sch:assert>
<sch:assert test="not(@unitCodeListAgencyName)">A Quantity SHOULD not contain an unitCodeListAgencyName attribute.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00043" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:Delivery" flag="error">
<sch:assert test="not(cbc:Quantity)">A Delivery SHOULD not contain a Quantity.</sch:assert>
<sch:assert test="not(cbc:MinimumQuantity)">A Delivery SHOULD not contain a MinimumQuantity.</sch:assert>
<sch:assert test="not(cbc:MaximumQuantity)">A Delivery SHOULD not contain a MaximumQuantity.</sch:assert>
<sch:assert test="not(cbc:ActualDeliveryDate)">A Delivery SHOULD not contain an ActualDeliveryDate.</sch:assert>
<sch:assert test="not(cbc:ActualDeliveryTime)">A Delivery SHOULD not contain an ActualDeliveryTime.</sch:assert>
<sch:assert test="not(cbc:LatestDeliveryDate)">A Delivery SHOULD not contain a LatestDeliveryDate.</sch:assert>
<sch:assert test="not(cbc:LatestDeliveryTime)">A Delivery SHOULD not contain a LatestDeliveryTime.</sch:assert>
<sch:assert test="not(cbc:ReleaseID)">A Delivery SHOULD not contain a ReleaseID.</sch:assert>
<sch:assert test="not(cbc:TrackingID)">A Delivery SHOULD not contain a TrackingID.</sch:assert>
<sch:assert test="not(cac:DeliveryAddress)">A Delivery SHOULD not contain a DeliveryAddress.</sch:assert>
<sch:assert test="not(cac:AlternativeDeliveryLocation)">A Delivery SHOULD not contain an AlternativeDeliveryLocation.</sch:assert>
<sch:assert test="not(cac:EstimatedDeliveryPeriod)">A Delivery SHOULD not contain an EstimatedDeliveryPeriod.</sch:assert>
<sch:assert test="not(cac:CarrierParty)">A Delivery SHOULD not contain a CarrierParty.</sch:assert>
<sch:assert test="not(cac:DeliveryParty)">A Delivery SHOULD not contain a DeliveryParty.</sch:assert>
<sch:assert test="not(cac:NotifyParty)">A Delivery SHOULD not contain a NotifyParty.</sch:assert>
<sch:assert test="not(cac:DeliveryTerms)">A Delivery SHOULD not contain a DeliveryTerms.</sch:assert>
<sch:assert test="not(cac:MinimumDeliveryUnit)">A Delivery SHOULD not contain a MinimumDeliveryUnit.</sch:assert>
<sch:assert test="not(cac:MaximumDeliveryUnit)">A Delivery SHOULD not contain a MaximumDeliveryUnit.</sch:assert>
<sch:assert test="not(cac:Shipment)">A Delivery SHOULD not contain a Shipment.</sch:assert>
<sch:assert test="not(cac:RequestedDeliveryPeriod/cbc:DurationMeasure)">A RequestedDeliveryPeriod SHOULD not contain a DurationMeasure.</sch:assert>
<sch:assert test="not(cac:RequestedDeliveryPeriod/cbc:DescriptionCode)">A RequestedDeliveryPeriod SHOULD not contain a DescriptionCode.</sch:assert>
<sch:assert test="not(cac:RequestedDeliveryPeriod/cbc:Description)">A RequestedDeliveryPeriod SHOULD not contain a Description.</sch:assert>
<sch:assert test="not(cac:PromisedDeliveryPeriod/cbc:DurationMeasure)">A PromisedDeliveryPeriod SHOULD not contain a DurationMeasure.</sch:assert>
<sch:assert test="not(cac:PromisedDeliveryPeriod/cbc:DescriptionCode)">A PromisedDeliveryPeriod SHOULD not contain a DescriptionCode.</sch:assert>
<sch:assert test="not(cac:PromisedDeliveryPeriod/cbc:Description)">A PromisedDeliveryPeriod SHOULD not contain a Description.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:ID)">A Despatch SHOULD not contain an ID.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:RequestedDespatchDate)">A Despatch SHOULD not contain a RequestedDespatchDate.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:RequestedDespatchTime)">A Despatch SHOULD not contain a RequestedDespatchTime.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:EstimatedDespatchDate)">A Despatch SHOULD not contain an EstimatedDespatchDate.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:EstimatedDespatchTime)">A Despatch SHOULD not contain an EstimatedDespatchTime.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:ActualDespatchDate)">A Despatch SHOULD not contain an ActualDespatchDate.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:ActualDespatchTime)">A Despatch SHOULD not contain an ActualDespatchTime.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:GuaranteedDespatchDate)">A Despatch SHOULD not contain a GuaranteedDespatchDate.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:GuaranteedDespatchTime)">A Despatch SHOULD not contain a GuaranteedDespatchTime.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:ReleaseID)">A Despatch SHOULD not contain a ReleaseID.</sch:assert>
<sch:assert test="not(cac:Despatch/cac:DespatchAddress)">A Despatch SHOULD not contain a DespatchAddress.</sch:assert>
<sch:assert test="not(cac:Despatch/cac:DespatchLocation)">A Despatch SHOULD not contain a DespatchLocation.</sch:assert>
<sch:assert test="not(cac:Despatch/cac:DespatchParty)">A Despatch SHOULD not contain a DespatchParty.</sch:assert>
<sch:assert test="not(cac:Despatch/cac:CarrierParty)">A Despatch SHOULD not contain a CarrierParty.</sch:assert>
<sch:assert test="not(cac:Despatch/cac:NotifyParty)">A Despatch SHOULD not contain a NotifyParty.</sch:assert>
<sch:assert test="not(cac:Despatch/cac:Contact)">A Despatch SHOULD not contain a Contact.</sch:assert>
<sch:assert test="not(cac:Despatch/cac:EstimatedDespatchPeriod)">A Despatch SHOULD not contain an EstimatedDespatchPeriod.</sch:assert>
<sch:assert test="not(cac:Despatch/cac:RequestedDespatchPeriod)">A Despatch SHOULD not contain a RequestedDespatchPeriod.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00044" fpi="SCSN restrictions on UBL syntax" context="//cac:Delivery" flag="error">
<sch:assert test="cac:RequestedDeliveryPeriod">RequestedDeliveryPeriod is mandatory.</sch:assert>
<sch:assert test="cac:RequestedDeliveryPeriod/cbc:EndDate">EndDate is mandatory.</sch:assert>
<sch:assert test="not(cac:Despatch/cbc:Instructions[2])">Instructions is only allowed once.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00045" fpi="SCSN restrictions on UBL syntax" context="//cac:Delivery/cac:PromisedDeliveryPeriod" flag="error">
<sch:assert test="cbc:EndDate">EndDate is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00046" fpi="SCSN restrictions on UBL syntax" context="//cac:Delivery/cbc:Quantity" flag="error">
<sch:assert test="@unitCode">The attribute unitCode is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00047" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:Delivery/cbc:Quantity" flag="error">
<sch:assert test="not(@unitCodeListID)">A Quantity SHOULD not contain an unitCodeListID attribute.</sch:assert>
<sch:assert test="not(@unitCodeListAgencyID)">A Quantity SHOULD not contain an unitCodeListAgencyID attribute.</sch:assert>
<sch:assert test="not(@unitCodeListAgencyName)">A Quantity SHOULD not contain an unitCodeListAgencyName attribute.</sch:assert>
</sch:rule>
</sch:pattern>


<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00048" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:Item" flag="error">
<sch:assert test="not(cbc:PackQuantity)">An Item SHOULD not contain PackQuantity.</sch:assert>
<sch:assert test="not(cbc:PackSizeNumeric)">An Item SHOULD not contain PackSizeNumeric.</sch:assert>
<sch:assert test="not(cbc:CatalogueIndicator)">An Item SHOULD not contain CatalogueIndicator.</sch:assert>
<sch:assert test="not(cbc:HazardousRiskIndicator)">An Item SHOULD not contain HazardousRiskIndicator.</sch:assert>
<sch:assert test="not(cbc:AdditionalInformation)">An Item SHOULD not contain AdditionalInformation.</sch:assert>
<sch:assert test="not(cbc:Keyword)">An Item SHOULD not contain Keyword.</sch:assert>
<sch:assert test="not(cbc:BrandName)">An Item SHOULD not contain BrandName.</sch:assert>
<sch:assert test="not(cbc:ModelName)">An Item SHOULD not contain ModelName.</sch:assert>
<sch:assert test="not(cac:ManufacturersItemIdentification)">An Item SHOULD not contain ManufacturersItemIdentification.</sch:assert>
<sch:assert test="not(cac:CatalogueItemIdentification)">An Item SHOULD not contain CatalogueItemIdentification.</sch:assert>
<sch:assert test="not(cac:AdditionalItemIdentification)">An Item SHOULD not contain AdditionalItemIdentification.</sch:assert>
<sch:assert test="not(cac:CatalogueDocumentReference)">An Item SHOULD not contain CatalogueDocumentReference.</sch:assert>
<sch:assert test="not(cac:OriginCountry)">An Item SHOULD not contain OriginCountry.</sch:assert>
<sch:assert test="not(cac:CommodityClassification)">An Item SHOULD not contain CommodityClassification.</sch:assert>
<sch:assert test="not(cac:TransactionConditions)">An Item SHOULD not contain TransactionConditions.</sch:assert>
<sch:assert test="not(cac:HazardousItem)">An Item SHOULD not contain HazardousItem.</sch:assert>
<sch:assert test="not(cac:ClassifiedTaxCategory)">An Item SHOULD not contain ClassifiedTaxCategory.</sch:assert>
<sch:assert test="not(cac:InformationContentProviderParty)">An Item SHOULD not contain InformationContentProviderParty.</sch:assert>
<sch:assert test="not(cac:OriginAddress)">An Item SHOULD not contain OriginAddress.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:ProductTraceID)">An ItemInstance SHOULD not contain ProductTraceID.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:ManufactureDate)">An ItemInstance SHOULD not contain ManufactureDate.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:ManufactureTime)">An ItemInstance SHOULD not contain ManufactureTime.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:BestBeforeDate)">An ItemInstance SHOULD not contain BestBeforeDate.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:RegistrationID)">An ItemInstance SHOULD not contain RegistrationID.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:SerialID/@schemeID)">A SerialID SHOULD not contain a schemeID attribute.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:SerialID/@schemeName)">A SerialID SHOULD not contain a schemeName attribute.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:SerialID/@schemeAgencyID)">A SerialID SHOULD not contain a schemeAgencyID attribute.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:SerialID/@schemeAgencyName)">A SerialID SHOULD not contain a schemeAgencyName attribute.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:SerialID/@schemeVersionID)">A SerialID SHOULD not contain a schemeVersionID attribute.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:SerialID/@schemeDataURI)">A SerialID SHOULD not contain a schemeDataURI attribute.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cbc:SerialID/@schemeURI)">A SerialID SHOULD not contain a schemeURI attribute.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cac:AdditionalItemProperty)">An ItemInstance SHOULD not contain AdditionalItemProperty.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cac:LotIdentification/cbc:ExpiryDate)">A LotIdentification SHOULD not contain ExpiryDate.</sch:assert>
<sch:assert test="not(cac:ItemInstance/cac:LotIdentification/cac:AdditionalItemProperty)">A LotIdentification SHOULD not contain AdditionalItemProperty.</sch:assert>
<sch:assert test="not(cac:Certificate)">An Item SHOULD not contain Certificate.</sch:assert>
<sch:assert test="not(cac:AdditionalItemProperty)">An ItemInstance SJOULD not contain AdditionalItemProperty.</sch:assert>
<sch:assert test="not(cac:Dimension/cbc:Description)">A Dimension SHOULD not contain a Description.</sch:assert>
<sch:assert test="not(cac:Dimension/cbc:MinimumMeasure)">A Dimension SHOULD not contain a MinimumMeasure.</sch:assert>
<sch:assert test="not(cac:Dimension/cbc:MaximumMeasure)">A Dimension SHOULD not contain a MaximumMeasure.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00050" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:BuyersItemIdentification | //cac:SellersItemIdentification | //cac:StandardItemIdentification" flag="error">
<sch:assert test="not(cbc:BarcodeSymbologyID)">An ItemIdentification SHOULD not contain BarcodeSymbologyID.</sch:assert>
<sch:assert test="not(cac:PhysicalAttribute)">An ItemIdentification SHOULD not contain PhysicalAttribute.</sch:assert>
<sch:assert test="not(cac:MeasurementDimension)">An ItemIdentification SHOULD not contain MeasurementDimension.</sch:assert>
<sch:assert test="not(cac:IssuerParty)">An ItemIdentification SHOULD not contain IssuerParty.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00049" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:BuyersItemIdentification/cbc:ID | //cac:SellersItemIdentification/cbc:ID | //cac:BuyersItemIdentification/cbc:ExtendedID | //cac:SellersItemIdentification/cbc:ExtendedID | //cac:StandardItemIdentification/cbc:ExtendedID" flag="error">
<sch:assert test="not(@schemeID)">This ID SHOULD not contain a schemeID attribute.</sch:assert>
<sch:assert test="not(@schemeName)">This ID SHOULD not contain a schemeName attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyID)">This ID SHOULD not contain a schemeAgencyID attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyName)">This ID SHOULD not contain a schemeAgencyName attribute.</sch:assert>
<sch:assert test="not(@schemeVersionID)">This ID SHOULD not contain a schemeVersionID attribute.</sch:assert>
<sch:assert test="not(@schemeDataURI)">This ID SHOULD not contain a schemeDataURI attribute.</sch:assert>
<sch:assert test="not(@schemeURI)">This ID SHOULD not contain a schemeURI attribute.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00050" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:StandardItemIdentification/cbc:ID" flag="error">
<sch:assert test="not(@schemeName)">This ID SHOULD not contain a schemeName attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyID)">This ID SHOULD not contain a schemeAgencyID attribute.</sch:assert>
<sch:assert test="not(@schemeAgencyName)">This ID SHOULD not contain a schemeAgencyName attribute.</sch:assert>
<sch:assert test="not(@schemeVersionID)">This ID SHOULD not contain a schemeVersionID attribute.</sch:assert>
<sch:assert test="not(@schemeDataURI)">This ID SHOULD not contain a schemeDataURI attribute.</sch:assert>
<sch:assert test="not(@schemeURI)">This ID SHOULD not contain a schemeURI attribute.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00051" fpi="SCSN restrictions on UBL syntax" context="//cac:Item" flag="error">
<sch:assert test="not(cbc:Description[2])">Description is only allowed once.</sch:assert>
<sch:assert test="not(cac:ManufacturerParty[2])">ManufacturerParty is only allowed once.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00052" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:Price" flag="error">
<sch:assert test="not(cbc:PriceChangeReason)">A Price SHOULD not contain a PriceChangeReason.</sch:assert>
<sch:assert test="not(cbc:OrderableUnitFactorRate)">A Price SHOULD not contain an OrderableUnitFactorRate.</sch:assert>
<sch:assert test="not(cac:ValidityPeriod)">A Price SHOULD not contain a ValidityPeriod.</sch:assert>
<sch:assert test="not(cac:PriceList)">A Price SHOULD not contain a PriceList.</sch:assert>
<sch:assert test="not(cac:PricingExchangeRate)">A Price SHOULD not contain a PricingExchangeRate.</sch:assert>
</sch:rule>
</sch:pattern>
<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00053" fpi="SCSN restrictions on UBL syntax" context="//cac:Price" flag="error">
<sch:assert test="cbc:PriceType">PriceType is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>
<sch:pattern>
<sch:rule id="SCSN-UBL-RequestForQuotation-v0.9.1-00054" fpi="SCSN restrictions on UBL syntax" context="//cbc:PriceType" flag="error">
<sch:assert test="(. = 'gross') or (. = 'net')">PriceType MUST be specified as 'gross' or 'net'.</sch:assert>
</sch:rule>
</sch:pattern>

<sch:pattern>
<sch:rule id="SCSN-UBL-Quotation-v0.9.1-00055" fpi="Only the UBL elements specified by SCSN are allowed" context="//cac:SubLineItem" flag="error">
<sch:assert test="not(cbc:SalesOrderID)">A LineItem SHOULD not contain SalesOrderID.</sch:assert>
<sch:assert test="not(cbc:UUID)">A LineItem SHOULD not contain UUID.</sch:assert>
<sch:assert test="not(cbc:TotalTaxAmount)">A LineItem SHOULD not contain TotalTaxAmount.</sch:assert>
<sch:assert test="not(cbc:MinimumQuantity)">A LineItem SHOULD not contain MinimumQuantity.</sch:assert>
<sch:assert test="not(cbc:MaximumQuantity)">A LineItem SHOULD not contain MaximumQuantity.</sch:assert>
<sch:assert test="not(cbc:MinimumBackorderQuantity)">A LineItem SHOULD not contain MinimumBackorderQuantity.</sch:assert>
<sch:assert test="not(cbc:MaximumBackorderQuantity)">A LineItem SHOULD not contain MaximumBackorderQuantity.</sch:assert>
<sch:assert test="not(cbc:InspectionMethodCode)">A LineItem SHOULD not contain InspectionMethodCode.</sch:assert>
<sch:assert test="not(cbc:PartialDeliveryIndicator)">A LineItem SHOULD not contain PartialDeliveryIndicator.</sch:assert>
<sch:assert test="not(cbc:BackOrderAllowedIndicator)">A LineItem SHOULD not contain BackOrderAllowedIndicator.</sch:assert>
<sch:assert test="not(cbc:AccountingCostCode)">A LineItem SHOULD not contain AccountingCostCode.</sch:assert>
<sch:assert test="not(cbc:AccountingCost)">A LineItem SHOULD not contain AccountingCost.</sch:assert>
<sch:assert test="not(cbc:WarrantyInformation)">A LineItem SHOULD not contain WarrantyInformation.</sch:assert>
<sch:assert test="not(cac:Delivery)">A LineItem SHOULD not contain Delivery.</sch:assert>
<sch:assert test="not(cac:DeliveryTerms)">A LineItem SHOULD not contain DeliveryTerms.</sch:assert>
<sch:assert test="not(cac:OriginatorParty)">A LineItem SHOULD not contain OriginatorParty.</sch:assert>
<sch:assert test="not(cac:OrderedShipment)">A LineItem SHOULD not contain OrderedShipment.</sch:assert>
<sch:assert test="not(cac:PricingReference)">A LineItem SHOULD not contain PricingReference.</sch:assert>
<sch:assert test="not(cac:AllowanceCharge)">A LineItem SHOULD not contain AllowanceCharge.</sch:assert>
<sch:assert test="not(cac:WarrantyValidityPeriod)">A LineItem SHOULD not contain WarrantyValidityPeriod.</sch:assert>
<sch:assert test="not(cac:WarrantyParty)">A LineItem SHOULD not contain WarrantyParty.</sch:assert>
<sch:assert test="not(cac:TaxTotal)">A LineItem SHOULD not contain TaxTotal.</sch:assert>
<sch:assert test="not(cac:ItemPriceExtension)">A LineItem SHOULD not contain ItemPriceExtension.</sch:assert>
<sch:assert test="not(cac:LineReference)">A LineItem SHOULD not contain LineReference.</sch:assert>
</sch:rule>
</sch:pattern>
<sch:pattern>
<sch:rule id="SCSN-UBL-Quotation-v0.9.1-00056" fpi="SCSN restrictions on UBL syntax" context="//cac:SubLineItem" flag="error">
<sch:assert test="cbc:Quantity">Quantity is mandatory.</sch:assert>
<sch:assert test="cac:Price">Price is mandatory.</sch:assert>
</sch:rule>
</sch:pattern>
</sch:schema>